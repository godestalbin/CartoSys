@model CartoSys.Models.Flow
@{ Layout = "~/Views/Shared/_ModalLayout.cshtml"; }

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Flow</legend>

        @Html.HiddenFor(model => model.ID)

        <div class ="float-left">
        <div class="editor-label">
            @Html.LabelFor(model => model.SourceId)
        </div>
        <div class="editor-field">
            @* @Html.EditorFor(model => model.SourceId) *@
            @Html.DropDownList("SourceId", ViewBag.applicationList as SelectList, "Select...")
            @Html.ValidationMessageFor(model => model.SourceId)
        </div>
        </div>

        <div class ="float-left">
        <div class="editor-label">
            @Html.LabelFor(model => model.TargetId)
        </div>
        <div class="editor-field">
            @* @Html.EditorFor(model => model.TargetId) *@
            @Html.DropDownList("TargetId", ViewBag.applicationList as SelectList, "Select...")
            @Html.ValidationMessageFor(model => model.TargetId)
        </div>
        </div>

        <div class ="" style="clear: left;">
        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>
        </div>

        <div style="white-space: nowrap;">
        <div class="float-left">
        <div class="editor-label">
            @Html.LabelFor(model => model.FlowType)
        </div>
        <div class="editor-field">
            @* @Html.EditorFor(model => model.FlowType) *@
            @Html.DropDownList("FlowType", ViewBag.flowTypeList as SelectList, "Select...")
            @Html.ValidationMessageFor(model => model.FlowType)
        </div>
        </div>

        <div class="float-left">
        <div class="editor-label">
            @Html.LabelFor(model => model.SendingMode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SendingMode)
            @Html.ValidationMessageFor(model => model.SendingMode)
        </div>
        </div>
        </div>

        <div style="margin-top: 60px; ">
        <div class="editor-label">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>
        </div>

        <div class="float-left">
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new {rows="6", cols="5"})
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        </div>

        <div >
            <input type="submit" value="Save"/>
            <input type="button" value="Cancel" onclick="CloseAndRefresh();"/>
        </div>  
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    function CloseAndRefresh() {
    alert('gere');
    document.forms['__RequestVerificationToken'].submit();
    window.close();
     //opener.location.reload(true);
     
    }
    </script>
}
